name: PHP Composer

on:
  push:
    branches: [ "main" ] # Trigger workflow on push to the "main" branch
  pull_request:
    branches: [ "main" ] # Trigger workflow on pull requests to the "main" branch

permissions:
  contents: read # Set permissions for the repository content

jobs:
  build:

    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
    # Step 1: Check out the repository code
    - uses: actions/checkout@v4

    # Step 2: Validate composer.json and composer.lock
    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    # Step 3: Cache Composer dependencies
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor # Cache the vendor directory
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php- # Fallback to a more general key

    # Step 4: Install dependencies
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Step 5: Run test suite (commented out)
    # Add a "test" script in your composer.json to define the test command
    # For example:
    # "scripts": {
    #   "test": "vendor/bin/phpunit"
    # }
    # Uncomment the following lines to run the tests
    # - name: Run test suite
    #   run: composer run-script test
